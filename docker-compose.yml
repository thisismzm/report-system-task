services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    hostname: app-dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - appnet
      - webnet
    profiles:
      - dev

  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    hostname: app-prod
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - appnet
      - webnet
    profiles:
      - prod

  mongo:
    image: mongo
    hostname: mongo
    ports:
      - "27017:27017"
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--eval",
          'db.runCommand("ping").ok',
          "--quiet"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - appnet
      - webnet
    profiles:
      - dev
      - prod

  mongo-express:
    image: mongo-express
    hostname: mongo-express
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - appnet
      - webnet
    profiles:
      - dev

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "8080:8080"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 3s
      retries: 10
    env_file:
      - .env
    networks:
      - appnet
      - webnet
    profiles:
      - dev
      - prod

volumes:
  mongodb_data:
  mongodb_config:

networks:
  appnet:
  webnet:
